
@model ASPNET_Core_MVC.Models.TvSeries

@{
    ViewData["Title"] = Model.Title;
    
    // Group episodes by season
    var seasons = Model.Episodes
        .GroupBy(e => e.SeasonNumber)
        .OrderBy(g => g.Key)
        .ToList();
}

<div class="container movie-details">
    <div class="row mb-4">
        <div class="col-md-4">
            <img src="@Model.ImageUrl" class="img-fluid movie-poster" alt="@Model.Title">
        </div>
        <div class="col-md-8">
            <h1>@Model.Title</h1>
            <p class="text-muted">
                @Model.Genre | @Model.StartYear@(Model.EndYear.HasValue ? $" - {Model.EndYear}" : " - Present")
            </p>
            <p>Created by: @Model.Creator</p>
            <p>@Model.Description</p>
            
            <div class="mt-4">
                @if (seasons.Any() && seasons.First().Any())
                {
                    <a asp-action="Watch" asp-route-id="@seasons.First().First().Id" class="btn btn-success">
                        Watch First Episode
                    </a>
                }
            </div>
        </div>
    </div>
    
    @foreach (var season in seasons)
    {
        <div class="card mb-4">
            <div class="card-header">
                <h3>Season @season.Key</h3>
            </div>
            <div class="list-group list-group-flush">
                @foreach (var episode in season.OrderBy(e => e.EpisodeNumber))
                {
                    <a asp-action="Watch" asp-route-id="@episode.Id" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">@episode.SeasonNumber.@episode.EpisodeNumber - @episode.Title</h5>
                            <p class="mb-1">@episode.Description</p>
                        </div>
                        <span class="badge badge-primary badge-pill">@episode.Duration min</span>
                    </a>
                }
            </div>
        </div>
    }
</div>
